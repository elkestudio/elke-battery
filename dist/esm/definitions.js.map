{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import { PluginListenerHandle } from '@capacitor/core';\r\n\r\nexport interface ElkeBatteryPlugin {\r\n  /**\r\n   * Get current battery information\r\n   */\r\n  getBatteryInfo(): Promise<BatteryInfo>;\r\n  \r\n  /**\r\n   * Listen for battery changes\r\n   */\r\n  addBatteryListener(callback: (info: BatteryInfo) => void): Promise<{value: string}>;\r\n  \r\n  /**\r\n   * Remove battery listener\r\n   */\r\n  removeBatteryListener(callbackId: string): Promise<void>;\r\n\r\n  /**\r\n   * Add a listener for battery events\r\n   */\r\n  addListener(eventName: 'batteryChanged', listenerFunc: (data: BatteryInfo) => void): Promise<PluginListenerHandle>;\r\n}\r\n\r\nexport interface BatteryInfo {\r\n  /**\r\n   * Battery level as a percentage (0-100)\r\n   */\r\n  level: number;\r\n  \r\n  /**\r\n   * Whether the device is currently charging\r\n   */\r\n  isCharging: boolean;\r\n  \r\n  /**\r\n   * Whether the battery level is low (typically < 20%)\r\n   */\r\n  isLowBattery: boolean;\r\n  \r\n  /**\r\n   * Battery status text\r\n   */\r\n  status: 'charging' | 'discharging' | 'full' | 'not_charging' | 'unknown';\r\n}\r\n"]}